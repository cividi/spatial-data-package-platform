# Generated by Django 3.1.13 on 2022-02-23 13:24

from django.db import migrations
from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist


def forwards_func(apps, schema_editor):
    Workspace = apps.get_model('gsmap', 'Workspace')
    WorkspaceTranslation = apps.get_model('gsmap', 'WorkspaceTranslation')

    for object in Workspace.objects.all():
        WorkspaceTranslation.objects.create(
            master_id=object.pk,
            language_code=settings.PARLER_DEFAULT_LANGUAGE_CODE,
            title=object._title,
            description=object._description
        )

def backwards_func(apps, schema_editor):
    Workspace = apps.get_model('gsmap', 'Workspace')
    WorkspaceTranslation = apps.get_model('gsmap', 'WorkspaceTranslation')

    for object in Workspace.objects.all():
        translation = _get_translation(object, WorkspaceTranslation)
        object._title = translation.title
        object._description = translation.description
        object.save()   # Note this only calls Model.save()

def _get_translation(object, WorkspaceTranslation):
    translations = WorkspaceTranslation.objects.filter(master_id=object.pk)
    try:
        # Try default translation
        return translations.get(language_code=settings.PARLER_DEFAULT_LANGUAGE_CODE)
    except ObjectDoesNotExist:
        try:
            # Try default language
            return translations.get(language_code=settings.LANGUAGE_CODE)
        except ObjectDoesNotExist:
            # Maybe the object was translated only in a specific language?
            # Hope there is a single translation
            return translations.get()

class Migration(migrations.Migration):

    dependencies = [
        ('gsmap', '0037_add_translation_model'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func),
    ]
