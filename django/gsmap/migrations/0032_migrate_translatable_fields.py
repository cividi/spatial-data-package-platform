# Generated by Django 3.1.13 on 2022-02-22 13:48

from django.db import migrations
from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist


def forwards_func(apps, schema_editor):
    Category = apps.get_model('gsmap', 'Category')
    CategoryTranslation = apps.get_model('gsmap', 'CategoryTranslation')

    for object in Category.objects.all():
        CategoryTranslation.objects.create(
            master_id=object.pk,
            language_code=settings.PARLER_DEFAULT_LANGUAGE_CODE,
            name=object._name
        )

def backwards_func(apps, schema_editor):
    Category = apps.get_model('gsmap', 'Category')
    CategoryTranslation = apps.get_model('gsmap', 'CategoryTranslation')

    for object in Category.objects.all():
        translation = _get_translation(object, CategoryTranslation)
        object._name = translation.name
        object.save()   # Note this only calls Model.save()

def _get_translation(object, CategoryTranslation):
    translations = CategoryTranslation.objects.filter(master_id=object.pk)
    try:
        # Try default translation
        return translations.get(language_code=settings.PARLER_DEFAULT_LANGUAGE_CODE)
    except ObjectDoesNotExist:
        try:
            # Try default language
            return translations.get(language_code=settings.LANGUAGE_CODE)
        except ObjectDoesNotExist:
            # Maybe the object was translated only in a specific language?
            # Hope there is a single translation
            return translations.get()


class Migration(migrations.Migration):

    dependencies = [
        ('gsmap', '0031_add_translation_model'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func),
    ]
